---
name: Windows wheels

on: [push, pull_request, workflow_dispatch]

# cancel running jobs on new commit to PR
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-wheels-win:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "windows-2019"
            arch: AMD64
            msvc_arch: x64
            # windows requires windows-specific paths
            vcpkg_cache: "c:\\vcpkg\\installed"
            vcpkg_logs: "c:\\vcpkg\\buildtrees\\**\\*.log"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: Toblerity/Fiona
          ref: 1.9a2

      - name: Add to Fiona setup.cfg
        shell: bash
        run: |
          echo -e "\n[build_ext]" >> setup.cfg
          echo "include_dirs = C:/vcpkg/installed/x64-windows/include" >> setup.cfg
          echo "libraries = gdal_i" >> setup.cfg
          echo "library_dirs = C:/vcpkg/installed/x64-windows/lib" >> setup.cfg
          cat setup.cfg

      - name: Cache vcpkg
        uses: actions/cache@v1
        id: vcpkgcache
        with:
          path: C:/vcpkg/installed
          key: ${{ runner.os }}-vcpkg

      - name: Install GDAL
        run: |
          vcpkg install gdal[core]:x64-windows
          vcpkg list

      - name: Upload vcpkg build logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          path: ${{ matrix.vcpkg_logs }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_SKIP: "*-win32 pp*"
          CIBW_ENVIRONMENT_WINDOWS:
            VCPKG_INSTALL="$VCPKG_INSTALLATION_ROOT/installed/x64-windows"
            GDAL_INCLUDE_PATH="$VCPKG_INSTALL/include"
            GDAL_LIBRARY_PATH="$VCPKG_INSTALL/lib"
            PACKAGE_DATA=1
            GDAL_DATA="$VCPKG_INSTALL/share/gdal"
            PROJ_LIB="$VCPKG_INSTALL/share/proj/data"
            GDAL_VERSION="3.4.3"
          CIBW_BEFORE_BUILD_WINDOWS: pip install delvewheel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair --add-path C:/vcpkg/installed/x64-windows/bin -w {dest_dir} {wheel}

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  test-wheels:
    name: Test wheels on ${{ matrix.os }} (Python ${{ matrix.python-version }})
    needs: [build-wheels-win]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Checkout Fiona
        uses: actions/checkout@v3
        with:
          repository: Toblerity/Fiona
          ref: 1.9a2
          path: ./Fiona

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download wheels from artifacts
        uses: actions/download-artifact@v2
        with:
          path: wheelhouse

      - name: Install dependencies and Fiona wheel
        shell: bash
        run: |
          python -m pip install shapely oldest-supported-numpy attrs pytest click mock boto3 packaging hypothesis pytz
          python -m pip install --pre --find-links wheelhouse/artifact fiona
          python -m pip list

      - name: Run tests
        shell: bash
        run: |
          fio --version
          fio env --formats
          python test_fiona_issue383.py
          cp -R Fiona/tests tests
          GDAL_ENABLE_DEPRECATED_DRIVER_GTM=YES PROJ_NETWORK=ON python -m pytest -vv tests -m "not gdalbin" -k "not test_collection_zip_http and not test_mask_polygon_triangle and not test_show_versions and not test_append_or_driver_error and not [PCIDSK] and not cannot_append[FlatGeobuf]"
